package backTracking;

import java.util.*;
import java.lang.*;
import java.io.*;

class SubsetSum {
	public static void main(String[] args) {
		sumSubsetPath(4, new int[] { 1, 3, 5 });
	}

	private static void TargetSumSubsetPrint(int row, int col, boolean[][] strg, int[] arr, String psf) {

		if(strg[row-1][col]==true) {
			TargetSumSubsetPrint(row-1, col, strg, arr, psf);
		}
		
		if(col-arr[row-1]>=0) {
			TargetSumSubsetPrint(row-1, col-arr[row-1], strg, arr, psf+arr[row]);
		}
	}

	public static void sumSubsetPath(int sum, int[] arr) {
		boolean[][] strg = new boolean[arr.length + 1][sum + 1];
		for (int i = 0; i < strg.length; i++) {
			for (int j = 0; j < strg[0].length; j++) {
				if (i == 0 && j == 0) {
					strg[i][j] = true;
				} else if (i == 0) {
					strg[i][j] = false;
				} else if (j == 0) {
					strg[i][j] = true;
				} else {
					if (strg[i - 1][j]) {
						strg[i][j] = true;
					} else if (j - arr[i - 1] >= 0) {
						if (strg[i - 1][j - arr[i - 1]]) {
							strg[i][j] = true;
						}
					} else {
						strg[i][j] = strg[i - 1][j];
					}
				}
			}
		}
//		return;
		TargetSumSubsetPrint(strg.length - 1, strg[0].length - 1, strg, arr, "");
	}
}